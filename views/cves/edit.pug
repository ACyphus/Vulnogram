//- Copyright (c) 2017 Chandan B N. All rights reserved.

extends ../layout

block content
    p#infoMsg
        if doc && doc.updatedAt
            ='Last updated ' + textUtil.timeSince(doc.updatedAt) + ' ago by ' + doc.author
    .tabs
        if !min
            button.button.tabbutton.save(id="save1") SAVE
        input.tabradio(name='tabs', type='radio', id='editorTab', value="1", checked)
        label.tablabel#editorLabel(for='editorTab') Editor
        .content
            div
                button.button.auto.safe(id="auto",style="visibility:hidden") Auto-Text
            div.editor(id="editor")
            if !min
                a.right.rejected(id="remove") Delete this CVE from database
        input.tabradio(name='tabs', type='radio', id='sourceTab', value="2",)
        label.tablabel(for='sourceTab') Source
        .content
            div(id="output",rows="40",cols="100%")
                p
        if conf.yalmjs
            input.tabradio(name='tabs', type='radio', id='yamlTab', value="3")
            label.tablabel(for='yamlTab') YAML
            .content
                pre(id="yaml",rows="40",cols="100%")

        input.tabradio(name='tabs', type='radio', id='advisoryTab', value="4",)
        label.tablabel(for='advisoryTab') Advisory
        .content
            div(id="advisory")
        input.tabradio(name='tabs', type='radio', id='mitreTab', value="5",)
        label.tablabel(for='mitreTab') MITRE
        .content
            div(id="mitreweb")
        input.tabradio(name='tabs', type='radio', id='jsonTab', value="6",)
        label.tablabel(for='jsonTab') JSON
        .content
            pre(id="cvejson")        
    if !min
        div
            button.button.tabbutton.save(id="save2",style="visibility:hidden") SAVE     

    script.
        var csrfToken = "#{csrfToken}";
        var cveEntry=!{JSON.stringify(doc).replace(/\u2028/g, '\\u2028').replace(/\u2029/g, '\\u2029').replace(/</g, '\\u003C').replace(/>/g, '\\u003E').replace(/\//g, '\\u002F')};
        var CVEschema_custom=!{conf && conf.CVEschema_custom ? JSON.stringify(conf.CVEschema_custom).replace(/\u2028/g, '\\u2028').replace(/\u2029/g, '\\u2029').replace(/</g, '\\u003C').replace(/>/g, '\\u003E').replace(/\//g, '\\u002F') : false};

    script(src=conf.basedir + 'js/util.js')
    script(src=conf.basedir + 'js/schemas.js')
    script(src=conf.jsoneditor,integrity=conf.jsoneditorHash,crossorigin="anonymous")
    script(src=conf.ace,integrity=conf.aceHash,crossorigin="anonymous")
    if conf.yalmjs
        script(src=conf.yalmjs)
    script(src=conf.basedir + 'js/advisory.js')
    script(src=conf.basedir + 'js/editor.js')
